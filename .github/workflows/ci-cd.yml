name: 'CI/CD'

env:
  BUILD_CACHE_ID: tpp-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}

permissions:
  contents: read
  id-token: write

on:
  push:
    branches: [ 'master', 'develop' ]
    paths: ['pulter-site/**', 'pulter-poems/**']
  pull_request:
    branches: [ 'master' ]
    paths: [ 'pulter-site/**', 'pulter-poems/**' ]
  workflow_dispatch:

jobs:
  Build:
    name: Build the Site
    runs-on: macos-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Prepare Node 20
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install packages
        run: yarn

      - name: Install task runner
        run: npm i -g gulp-cli@latest

      - name: Run the build script
        run: npm run build

      - name: Cache the build
        uses: actions/cache/save@v3
        with:
          path: dist
          key: ${{ env.BUILD_CACHE_ID }}

  DeployToDev:
    name: Deploy to Development
    if: github.event.ref == 'refs/heads/develop'
    needs: [ 'Build' ]
    runs-on: ubuntu-latest
    environment:
      name: Development
      url: https://pulterproject-preview-c7ga82m1pzxmbn.netlify.app
    steps:
      - name: Restore cached build
        uses: actions/cache/restore@v3
        with:
          path: dist
          key: ${{ env.BUILD_CACHE_ID }}

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: dist
          production-deploy: true
          deploy-message: Triggered from Github Actions by @${{ github.actor }}.
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 2

  DeployToStaging:
    name: Deploy to Staging
    if: github.event.ref == 'refs/heads/master'
    needs: [ 'Build' ]
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: http://mads-static-sites-staging-pulterproject-staging.s3-website.us-east-2.amazonaws.com
    steps:
      - name: Restore cached build
        uses: actions/cache/restore@v3
        with:
          path: dist
          key: ${{ env.BUILD_CACHE_ID }}

      - name: Import Secrets
        id: import-secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: https://vault.weinberg.northwestern.edu:443
          role: MADS-S3-pulterproject-staging
          path: jwt-github
          method: jwt
          secrets: |
            platforms-kvv2/data/secrets/MADS-S3/pulterproject-staging access_key | AWS_ACCESS_KEY_ID ;
            platforms-kvv2/data/secrets/MADS-S3/pulterproject-staging secret_key | AWS_SECRET_ACCESS_KEY ;

      - name: Deploy to S3
        run: aws s3 sync dist/ s3://$BUCKET_NAME --delete
        env:
          AWS_ACCESS_KEY_ID: "${{ steps.import-secrets.outputs.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ steps.import-secrets.outputs.AWS_SECRET_ACCESS_KEY }}"
          AWS_DEFAULT_REGION: us-east-2
          BUCKET_NAME: "mads-static-sites-staging-pulterproject-staging"

  DeployToProduction:
    name: Deploy to Production
    if: github.event.ref == 'refs/heads/master'
    needs: [ 'DeployToStaging' ]
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: https://pulterproject.northwestern.edu
    steps:
      - name: Restore cached build
        uses: actions/cache/restore@v3
        with:
          path: dist
          key: ${{ env.BUILD_CACHE_ID }}

      - name: Import Secrets
        id: import-secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: https://vault.weinberg.northwestern.edu:443
          role: MADS-S3-pulterproject-prod
          path: jwt-github
          method: jwt
          secrets: |
            platforms-kvv2/data/secrets/MADS-S3/pulterproject-production access_key | AWS_ACCESS_KEY_ID ;
            platforms-kvv2/data/secrets/MADS-S3/pulterproject-production secret_key | AWS_SECRET_ACCESS_KEY ;

      - name: Deploy to S3
        run: aws s3 sync dist/ s3://$BUCKET_NAME --delete
        env:
          AWS_ACCESS_KEY_ID: "${{ steps.import-secrets.outputs.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ steps.import-secrets.outputs.AWS_SECRET_ACCESS_KEY }}"
          AWS_DEFAULT_REGION: us-east-2
          BUCKET_NAME: "group-websites-prod-mads-pulterproject"
